<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!-- root element -->
<xs:element name="flows" type="flowsType">
	<xs:key name="uniqueFlowName">
		<xs:selector xpath="./flow"/>
		<xs:field xpath="@name"/>
	</xs:key>
</xs:element>


<!-- types -->
<xs:simpleType name="stringType">
	<xs:restriction base="xs:string"/>
</xs:simpleType>

<!-- complex types -->
<xs:complexType name="flowsType">
		<xs:choice maxOccurs="unbounded">
			<xs:element name="flow" type="flowType">
				<xs:key name="uniqueStateName">
					<xs:selector xpath="./state"/>
					<xs:field xpath="@name"/>
				</xs:key>
			</xs:element>
		</xs:choice>
</xs:complexType>

<xs:complexType name="flowType">
	<xs:sequence>
		<xs:element name="state" type="stateType" minOccurs="1" maxOccurs="unbounded">
			<xs:key name="uniqueTransitionOn">
				<xs:selector xpath="./transition"/>
				<xs:field xpath="on"/>
			</xs:key>
		</xs:element>
		<xs:element name="secured" type="securedType" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="name" type="stringType" use="required"/>
</xs:complexType>

<xs:complexType name="stateType">
	<xs:sequence>
		<xs:element name="start" type="invokationType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="transition" type="transitionType" minOccurs="1" maxOccurs="unbounded"/>
		<xs:element name="exit" type="invokationType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="secured" type="securedType" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="name" type="stringType" use="required"/>
	<xs:attribute name="viewName" type="stringType" use="optional"/>
</xs:complexType>

<xs:complexType name="securedType">
	<xs:choice maxOccurs="unbounded">
		<xs:element name="roleName" type="stringType"/>
	</xs:choice>
</xs:complexType>

<xs:complexType name="transitionType">
	<xs:sequence>
		<xs:element name="on" type="stringType"/>
		<xs:choice minOccurs="0">
			<xs:element name="to" type="stringType"/>
			<xs:element name="decision" type="decisionType"/>
		</xs:choice>
		<xs:element name="invoke" type="invokationType" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="invokationType">
	<xs:sequence>
		<xs:element name="beanName" type="stringType"/>
		<xs:element name="methodName" type="stringType"/>
		<xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="resultName" type="stringType" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="paramType">
	<xs:sequence>
		<xs:element name="beanName" type="stringType"/>
		<!-- <xs:element name="methodName" type="stringType" minOccurs="0"/> -->
	</xs:sequence>
</xs:complexType>

<xs:complexType name="decisionType">
	<xs:sequence>
		<xs:element name="invoke" type="invokationType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="if" type="ifType" maxOccurs="unbounded"/>
		<xs:element name="elseTo" type="stringType" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="ifType">
	<xs:sequence>
		<xs:element name="object" type="stringType"/>
		<xs:element name="compareTo" type="stringType"/>
		<xs:element name="transitionTo" type="stringType" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>

</xs:schema>